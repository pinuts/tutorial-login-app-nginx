apply from: '.umstarter.gradle'

// Siehe Kickstarter.md für Beispiele und Erklärungen.

dependencies {
    runtime('de.pinuts.cmsbs:UM:7.53.0')
    runtime('de.pinuts.cmsbs:CseConsole:7.32.3')
    runtime('de.pinuts.cmsbs:TestDriver2:2.2.0')
    runtime('de.pinuts.cmsbs:Auth2:4.7.2')
}

enableWindows(configurations)

pinuts.projectName = 'MyProject'
pinuts.groupId = 'de.customer'
pinuts.um.port = System.getenv('MY_PROJECT_SERVER_PORT') ?: '8080'
pinuts.um.localLicenseFile = file('env/devel/cmsbs-conf/cmsbs.license')
pinuts.version = getVersionFromPluginDescriptor('cmsbs-conf/cse/plugins/de.pinuts.tutorial/plugin.desc.json')

startUm.dependsOn << umSchemaUpdate
run.dependsOn << umSchemaUpdate
test.dependsOn << testDriver_umci

setup.doLast {
    ln('cmsbs-conf/cse/plugins/de.pinuts.tutorial', pinuts.um.pluginsDir)
    ln('cmsbs-conf/cse/plugins/de.pinuts.tutorial.test', pinuts.um.pluginsDir)

    fileTree('cmsbs-conf/conf.d').each {target ->
        ln(target, pinuts.um.confdDir)
    }
    fileTree('env/devel/cmsbs-conf/conf.d').each {target ->
        ln(target, pinuts.um.confdDir)
    }

    // ln('cmsbs-conf/adminRoles', pinuts.um.cmsbsConfDir)
    // ln('cmsbs-conf/entryTypes', pinuts.um.cmsbsConfDir)

    // UM REST Proxy
    cp('UM/web-integration/cmsbs-restproxy.war', new File(pinuts.um.webappsDir, 'p.war'))
    cp('rest-proxy/cmsbs-restproxy.properties', new File(pinuts.um.serverHome, 'cmsbs-restproxy.properties'))

    // Static Web App
    ln('cmsbs-work/webapps/ROOT', new File(pinuts.um.cmsbsWorkDir, '/webapps'))
}

setup.finalizedBy vscode

